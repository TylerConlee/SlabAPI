type Query {
    zendeskconfig: ZendeskConfig!
    getAllTickets(config:ZendeskConfigInput!): Tickets!
    getAllViews(config:ZendeskConfigInput!): Views!
    getView(config:ZendeskConfigInput!,id:Int!): View!
    getViewCount(config:ZendeskConfigInput!,id:Int!): ViewCount!
    getOrganization(config:ZendeskConfigInput!,id:Int!): Organization!
}
type Mutation {
    updateZendeskConfig(user:String!,apikey:String!,url:String!): ZendeskConfig!
}

type ZendeskConfig {
    user: String!
    apikey: String!
    url: String!
}

input ZendeskConfigInput {
    user: String!
    apikey: String!
    url: String!
}

type Tickets {
    Tickets: [Ticket!]!
    Count: Int!
}

type Ticket {
    URL: String!
    ID: Int!
    CreatedAt: String!
    UpdatedAt: String!
    Subject: String!
    Description: String!
    Priority: String!
    Status: String!
    RequesterID: Int!
    OrganizationID: Int!
    GroupID: Int!
    Tags: [String!]
    CustomFields: [CustomField]
    SLA: String!
}

type CustomField {
    ID: Int
    Value: String
}


type Organization {
    URL: String!
	ID: Int! 
	Name: String! 
	CreatedAt: String!
	UpdatedAt: String!
	DomainNames: [String!]
	Tags: [String!]
	OrganizationFields: [OrgFields]
}

type OrgFields {
    SLALevel: String!
}


type Views {
    Views: [View!]!
    Count: Int!
}

type View {
    ID: Int!
    Title: String!
    Active: Boolean!
    Description: String!
    CreatedAt: String!
    UpdatedAt: String!
}

type ViewCount {
    ViewID: Int!
    URL: String!
    Value: Int!
    Pretty: String!
    Fresh: Boolean!
}